//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PistollegroMVC.PistollegroWCF {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyMV", Namespace="http://schemas.datacontract.org/2004/07/PistollegroWCF")]
    [System.SerializableAttribute()]
    public partial class CompanyMV : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NIP {
            get {
                return this.NIPField;
            }
            set {
                if ((object.ReferenceEquals(this.NIPField, value) != true)) {
                    this.NIPField = value;
                    this.RaisePropertyChanged("NIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeaponOfferMV", Namespace="http://schemas.datacontract.org/2004/07/PistollegroWCF")]
    [System.SerializableAttribute()]
    public partial class WeaponOfferMV : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasPictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasPicture {
            get {
                return this.HasPictureField;
            }
            set {
                if ((this.HasPictureField.Equals(value) != true)) {
                    this.HasPictureField = value;
                    this.RaisePropertyChanged("HasPicture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PistollegroWCF.IDbConnectionService")]
    public interface IDbConnectionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/loginOperation", ReplyAction="http://tempuri.org/IDbConnectionService/loginOperationResponse")]
        PistollegroMVC.PistollegroWCF.CompanyMV loginOperation(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/loginOperation", ReplyAction="http://tempuri.org/IDbConnectionService/loginOperationResponse")]
        System.Threading.Tasks.Task<PistollegroMVC.PistollegroWCF.CompanyMV> loginOperationAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/changePassword", ReplyAction="http://tempuri.org/IDbConnectionService/changePasswordResponse")]
        bool changePassword(string organizationName, string oldPasswd, string newPasswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/changePassword", ReplyAction="http://tempuri.org/IDbConnectionService/changePasswordResponse")]
        System.Threading.Tasks.Task<bool> changePasswordAsync(string organizationName, string oldPasswd, string newPasswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/registerCompany", ReplyAction="http://tempuri.org/IDbConnectionService/registerCompanyResponse")]
        bool registerCompany(PistollegroMVC.PistollegroWCF.CompanyMV cmpny);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/registerCompany", ReplyAction="http://tempuri.org/IDbConnectionService/registerCompanyResponse")]
        System.Threading.Tasks.Task<bool> registerCompanyAsync(PistollegroMVC.PistollegroWCF.CompanyMV cmpny);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/getCompany", ReplyAction="http://tempuri.org/IDbConnectionService/getCompanyResponse")]
        PistollegroMVC.PistollegroWCF.CompanyMV getCompany(string organizationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/getCompany", ReplyAction="http://tempuri.org/IDbConnectionService/getCompanyResponse")]
        System.Threading.Tasks.Task<PistollegroMVC.PistollegroWCF.CompanyMV> getCompanyAsync(string organizationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/getCompanies", ReplyAction="http://tempuri.org/IDbConnectionService/getCompaniesResponse")]
        PistollegroMVC.PistollegroWCF.CompanyMV[] getCompanies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/getCompanies", ReplyAction="http://tempuri.org/IDbConnectionService/getCompaniesResponse")]
        System.Threading.Tasks.Task<PistollegroMVC.PistollegroWCF.CompanyMV[]> getCompaniesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/GetCategories", ReplyAction="http://tempuri.org/IDbConnectionService/GetCategoriesResponse")]
        string[] GetCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/GetCategories", ReplyAction="http://tempuri.org/IDbConnectionService/GetCategoriesResponse")]
        System.Threading.Tasks.Task<string[]> GetCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/GetAllOffers", ReplyAction="http://tempuri.org/IDbConnectionService/GetAllOffersResponse")]
        PistollegroMVC.PistollegroWCF.WeaponOfferMV[] GetAllOffers(string orderSort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/GetAllOffers", ReplyAction="http://tempuri.org/IDbConnectionService/GetAllOffersResponse")]
        System.Threading.Tasks.Task<PistollegroMVC.PistollegroWCF.WeaponOfferMV[]> GetAllOffersAsync(string orderSort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/GetOffersOfCategories", ReplyAction="http://tempuri.org/IDbConnectionService/GetOffersOfCategoriesResponse")]
        PistollegroMVC.PistollegroWCF.WeaponOfferMV[] GetOffersOfCategories(string[] categoryNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/GetOffersOfCategories", ReplyAction="http://tempuri.org/IDbConnectionService/GetOffersOfCategoriesResponse")]
        System.Threading.Tasks.Task<PistollegroMVC.PistollegroWCF.WeaponOfferMV[]> GetOffersOfCategoriesAsync(string[] categoryNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/GetOffersOfCompany", ReplyAction="http://tempuri.org/IDbConnectionService/GetOffersOfCompanyResponse")]
        PistollegroMVC.PistollegroWCF.WeaponOfferMV[] GetOffersOfCompany(string companyName, string orderSort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/GetOffersOfCompany", ReplyAction="http://tempuri.org/IDbConnectionService/GetOffersOfCompanyResponse")]
        System.Threading.Tasks.Task<PistollegroMVC.PistollegroWCF.WeaponOfferMV[]> GetOffersOfCompanyAsync(string companyName, string orderSort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/GetOffer", ReplyAction="http://tempuri.org/IDbConnectionService/GetOfferResponse")]
        PistollegroMVC.PistollegroWCF.WeaponOfferMV GetOffer(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/GetOffer", ReplyAction="http://tempuri.org/IDbConnectionService/GetOfferResponse")]
        System.Threading.Tasks.Task<PistollegroMVC.PistollegroWCF.WeaponOfferMV> GetOfferAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/AddOffer", ReplyAction="http://tempuri.org/IDbConnectionService/AddOfferResponse")]
        System.Nullable<int> AddOffer(PistollegroMVC.PistollegroWCF.WeaponOfferMV offerToAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/AddOffer", ReplyAction="http://tempuri.org/IDbConnectionService/AddOfferResponse")]
        System.Threading.Tasks.Task<System.Nullable<int>> AddOfferAsync(PistollegroMVC.PistollegroWCF.WeaponOfferMV offerToAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/UpdateOffer", ReplyAction="http://tempuri.org/IDbConnectionService/UpdateOfferResponse")]
        void UpdateOffer(PistollegroMVC.PistollegroWCF.WeaponOfferMV offerToUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/UpdateOffer", ReplyAction="http://tempuri.org/IDbConnectionService/UpdateOfferResponse")]
        System.Threading.Tasks.Task UpdateOfferAsync(PistollegroMVC.PistollegroWCF.WeaponOfferMV offerToUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/DeleteOffer", ReplyAction="http://tempuri.org/IDbConnectionService/DeleteOfferResponse")]
        void DeleteOffer(PistollegroMVC.PistollegroWCF.WeaponOfferMV offerToDelete);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/DeleteOffer", ReplyAction="http://tempuri.org/IDbConnectionService/DeleteOfferResponse")]
        System.Threading.Tasks.Task DeleteOfferAsync(PistollegroMVC.PistollegroWCF.WeaponOfferMV offerToDelete);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/DeleteOfferById", ReplyAction="http://tempuri.org/IDbConnectionService/DeleteOfferByIdResponse")]
        void DeleteOfferById(System.Nullable<int> offerToDeleteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDbConnectionService/DeleteOfferById", ReplyAction="http://tempuri.org/IDbConnectionService/DeleteOfferByIdResponse")]
        System.Threading.Tasks.Task DeleteOfferByIdAsync(System.Nullable<int> offerToDeleteID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDbConnectionServiceChannel : PistollegroMVC.PistollegroWCF.IDbConnectionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DbConnectionServiceClient : System.ServiceModel.ClientBase<PistollegroMVC.PistollegroWCF.IDbConnectionService>, PistollegroMVC.PistollegroWCF.IDbConnectionService {
        
        public DbConnectionServiceClient() {
        }
        
        public DbConnectionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DbConnectionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DbConnectionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DbConnectionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PistollegroMVC.PistollegroWCF.CompanyMV loginOperation(string email, string password) {
            return base.Channel.loginOperation(email, password);
        }
        
        public System.Threading.Tasks.Task<PistollegroMVC.PistollegroWCF.CompanyMV> loginOperationAsync(string email, string password) {
            return base.Channel.loginOperationAsync(email, password);
        }
        
        public bool changePassword(string organizationName, string oldPasswd, string newPasswd) {
            return base.Channel.changePassword(organizationName, oldPasswd, newPasswd);
        }
        
        public System.Threading.Tasks.Task<bool> changePasswordAsync(string organizationName, string oldPasswd, string newPasswd) {
            return base.Channel.changePasswordAsync(organizationName, oldPasswd, newPasswd);
        }
        
        public bool registerCompany(PistollegroMVC.PistollegroWCF.CompanyMV cmpny) {
            return base.Channel.registerCompany(cmpny);
        }
        
        public System.Threading.Tasks.Task<bool> registerCompanyAsync(PistollegroMVC.PistollegroWCF.CompanyMV cmpny) {
            return base.Channel.registerCompanyAsync(cmpny);
        }
        
        public PistollegroMVC.PistollegroWCF.CompanyMV getCompany(string organizationName) {
            return base.Channel.getCompany(organizationName);
        }
        
        public System.Threading.Tasks.Task<PistollegroMVC.PistollegroWCF.CompanyMV> getCompanyAsync(string organizationName) {
            return base.Channel.getCompanyAsync(organizationName);
        }
        
        public PistollegroMVC.PistollegroWCF.CompanyMV[] getCompanies() {
            return base.Channel.getCompanies();
        }
        
        public System.Threading.Tasks.Task<PistollegroMVC.PistollegroWCF.CompanyMV[]> getCompaniesAsync() {
            return base.Channel.getCompaniesAsync();
        }
        
        public string[] GetCategories() {
            return base.Channel.GetCategories();
        }
        
        public System.Threading.Tasks.Task<string[]> GetCategoriesAsync() {
            return base.Channel.GetCategoriesAsync();
        }
        
        public PistollegroMVC.PistollegroWCF.WeaponOfferMV[] GetAllOffers(string orderSort) {
            return base.Channel.GetAllOffers(orderSort);
        }
        
        public System.Threading.Tasks.Task<PistollegroMVC.PistollegroWCF.WeaponOfferMV[]> GetAllOffersAsync(string orderSort) {
            return base.Channel.GetAllOffersAsync(orderSort);
        }
        
        public PistollegroMVC.PistollegroWCF.WeaponOfferMV[] GetOffersOfCategories(string[] categoryNames) {
            return base.Channel.GetOffersOfCategories(categoryNames);
        }
        
        public System.Threading.Tasks.Task<PistollegroMVC.PistollegroWCF.WeaponOfferMV[]> GetOffersOfCategoriesAsync(string[] categoryNames) {
            return base.Channel.GetOffersOfCategoriesAsync(categoryNames);
        }
        
        public PistollegroMVC.PistollegroWCF.WeaponOfferMV[] GetOffersOfCompany(string companyName, string orderSort) {
            return base.Channel.GetOffersOfCompany(companyName, orderSort);
        }
        
        public System.Threading.Tasks.Task<PistollegroMVC.PistollegroWCF.WeaponOfferMV[]> GetOffersOfCompanyAsync(string companyName, string orderSort) {
            return base.Channel.GetOffersOfCompanyAsync(companyName, orderSort);
        }
        
        public PistollegroMVC.PistollegroWCF.WeaponOfferMV GetOffer(System.Nullable<int> id) {
            return base.Channel.GetOffer(id);
        }
        
        public System.Threading.Tasks.Task<PistollegroMVC.PistollegroWCF.WeaponOfferMV> GetOfferAsync(System.Nullable<int> id) {
            return base.Channel.GetOfferAsync(id);
        }
        
        public System.Nullable<int> AddOffer(PistollegroMVC.PistollegroWCF.WeaponOfferMV offerToAdd) {
            return base.Channel.AddOffer(offerToAdd);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<int>> AddOfferAsync(PistollegroMVC.PistollegroWCF.WeaponOfferMV offerToAdd) {
            return base.Channel.AddOfferAsync(offerToAdd);
        }
        
        public void UpdateOffer(PistollegroMVC.PistollegroWCF.WeaponOfferMV offerToUpdate) {
            base.Channel.UpdateOffer(offerToUpdate);
        }
        
        public System.Threading.Tasks.Task UpdateOfferAsync(PistollegroMVC.PistollegroWCF.WeaponOfferMV offerToUpdate) {
            return base.Channel.UpdateOfferAsync(offerToUpdate);
        }
        
        public void DeleteOffer(PistollegroMVC.PistollegroWCF.WeaponOfferMV offerToDelete) {
            base.Channel.DeleteOffer(offerToDelete);
        }
        
        public System.Threading.Tasks.Task DeleteOfferAsync(PistollegroMVC.PistollegroWCF.WeaponOfferMV offerToDelete) {
            return base.Channel.DeleteOfferAsync(offerToDelete);
        }
        
        public void DeleteOfferById(System.Nullable<int> offerToDeleteID) {
            base.Channel.DeleteOfferById(offerToDeleteID);
        }
        
        public System.Threading.Tasks.Task DeleteOfferByIdAsync(System.Nullable<int> offerToDeleteID) {
            return base.Channel.DeleteOfferByIdAsync(offerToDeleteID);
        }
    }
}
